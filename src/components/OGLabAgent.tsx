'use client'

import { useState, useEffect, useRef, useCallback } from 'react'
import { useTranslations, useLocale } from 'next-intl'
import { AudioRecorder, transcribeAudio, type RecordingState, MAX_RECORDING_DURATION_SEC } from '@/lib/audio-recorder'
import {
  getOrCreateUserProfile,
  startConversation,
  addMessageToConversation,
  updateCurrentConversation,
  buildUserContext,
  getPersonalizedGreeting,
  clearUserProfile,
  saveUserProfile,
  discardCurrentConversation,
  type UserProfile,
  type Conversation,
} from '@/lib/user-profile'

// –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏ –∞–≥–µ–Ω—Ç–∞
const SUPPORTED_LANGUAGES = ['ru', 'en', 'th', 'fr', 'de', 'he', 'it'] as const

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞ markdown (–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç)
function renderMarkdown(text: string) {
  // –ó–∞–º–µ–Ω—è–µ–º **—Ç–µ–∫—Å—Ç** –Ω–∞ <strong>—Ç–µ–∫—Å—Ç</strong>
  const parts = text.split(/(\*\*.*?\*\*)/g);
  
  return parts.map((part, i) => {
    if (part.startsWith('**') && part.endsWith('**')) {
      const content = part.slice(2, -2);
      return <strong key={i} className="font-bold text-[#536C4A]">{content}</strong>;
    }
    return <span key={i}>{part}</span>;
  });
}

interface OGLabAgentProps {
  compact?: boolean; // –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–µ–Ω—é
}

export default function OGLabAgent({ compact = false }: OGLabAgentProps) {
  const t = useTranslations('HomePage')
  const locale = useLocale() // –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ª–æ–∫–∞–ª—å –∏–∑ next-intl
  const [question, setQuestion] = useState('')
  const [loading, setLoading] = useState(false)
  const [useStock, setUseStock] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const [cachePrefetched, setCachePrefetched] = useState(false)
  
  // User Profile & Conversation
  const [userProfile, setUserProfile] = useState<UserProfile | null>(null)
  const [currentConversation, setCurrentConversation] = useState<Conversation | null>(null)
  const [greeting, setGreeting] = useState<string>('')
  const [showStats, setShowStats] = useState(false)
  const [isInitialLoad, setIsInitialLoad] = useState(true) // –§–ª–∞–≥ –¥–ª—è –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
  const [showHistory, setShowHistory] = useState(false) // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∏—Å—Ç–æ—Ä–∏—é
  
  // Voice recording state
  const [recordingState, setRecordingState] = useState<RecordingState>('idle')
  const [isRecordingSupported, setIsRecordingSupported] = useState(false)
  const [recordingDuration, setRecordingDuration] = useState(0) // –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
  const recorderRef = useRef<AudioRecorder | null>(null)
  const durationTimerRef = useRef<NodeJS.Timeout | null>(null)
  
  // Ref –¥–ª—è —Å–∫—Ä–æ–ª–ª–∞ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –∞–≥–µ–Ω—Ç–∞ (–ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è)
  const agentContainerRef = useRef<HTMLElement | null>(null)
  // Ref –¥–ª—è —Å–∫—Ä–æ–ª–ª–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
  const lastMessageRef = useRef<HTMLDivElement | null>(null)

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏–æ
    const isSupported = AudioRecorder.isSupported()
    setIsRecordingSupported(isSupported)
    recorderRef.current = new AudioRecorder()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
    if (isSupported) {
      AudioRecorder.checkMicrophonePermission().then(permission => {
        if (permission === 'granted') {
          console.log('‚úÖ Microphone permission already granted')
        }
      })
    }
    
    return () => {
      // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä –∑–∞–ø–∏—Å–∏ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
      if (durationTimerRef.current) {
        clearInterval(durationTimerRef.current)
      }
      
      // –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
      if (recorderRef.current) {
        recorderRef.current.destroy()
      }
    }
  }, [locale])

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const profile = getOrCreateUserProfile()
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ª–æ–∫–∞–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
    const detectedLanguage: 'ru' | 'en' | 'th' | 'fr' | 'de' | 'he' | 'it' = SUPPORTED_LANGUAGES.includes(locale as typeof SUPPORTED_LANGUAGES[number]) 
      ? locale as typeof SUPPORTED_LANGUAGES[number]
      : 'en'
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —è–∑—ã–∫ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!profile.preferences.language) {
      profile.preferences.language = detectedLanguage
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –≤ LocalStorage
      saveUserProfile(profile)
    }
    
    setUserProfile(profile)
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–∞ —è–∑—ã–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userLanguage = profile.preferences.language || detectedLanguage
    const personalGreeting = getPersonalizedGreeting(profile, userLanguage)
    setGreeting(personalGreeting)
    
    console.log('üëã Greeting generated:', {
      userLanguage,
      detectedLanguage,
      isNewUser: profile.totalConversations === 0,
      greeting: personalGreeting.substring(0, 50) + '...',
    })
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–∏–∞–ª–æ–≥ –∏–ª–∏ –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π
    // conversations[0] = —Å–∞–º—ã–π —Å–≤–µ–∂–∏–π –¥–∏–∞–ª–æ–≥ (–æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏ –ø–µ—Ä–µ–º–µ—â–∞—é—Ç—Å—è –≤ –Ω–∞—á–∞–ª–æ)
    console.log('üìö Total conversations saved:', profile.conversations.length)
    if (profile.conversations.length > 0) {
      console.log('üìã All conversation IDs:', profile.conversations.map(c => ({ 
        id: c.id.substring(0, 15) + '...', 
        messages: c.messages.length,
        lastUpdated: new Date(c.lastUpdated).toLocaleString()
      })))
    }
    
    let conversation: Conversation
    if (profile.conversations.length > 0 && profile.conversations[0].messages.length > 0) {
      // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π (—Å–∞–º—ã–π —Å–≤–µ–∂–∏–π) –¥–∏–∞–ª–æ–≥
      conversation = profile.conversations[0]
      console.log('üìù Continuing last conversation:', conversation.id.substring(0, 20) + '... with', conversation.messages.length, 'messages')
    } else {
      // –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥
      conversation = startConversation()
      console.log('‚ú® Starting new conversation:', conversation.id.substring(0, 20) + '...')
    }
    setCurrentConversation(conversation)
    
    // –û—Ç–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ç–∏–∫–µ event loop
    // –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –±—Ä–∞—É–∑–µ—Ä—É –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä –±–µ–∑ —Å–∫—Ä–æ–ª–ª–∞
    setTimeout(() => {
      setIsInitialLoad(false)
    }, 0)
    
    console.log('üë§ User profile loaded:', {
      userId: profile.userId,
      visits: profile.totalConversations,
      totalMessages: profile.totalMessages,
      daysSinceFirst: Math.floor((Date.now() - profile.firstVisit.getTime()) / (1000 * 60 * 60 * 24)),
      language: userLanguage,
      detectedLocale: locale,
      hasConversations: profile.conversations.length > 0,
    })
  }, [locale])

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏/–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–∏—Å–ø–æ–ª—å–∑—É–µ–º ref –¥–ª—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π)
  const currentConversationRef = useRef(currentConversation)
  const userProfileRef = useRef(userProfile)
  
  useEffect(() => {
    currentConversationRef.current = currentConversation
  }, [currentConversation])
  
  useEffect(() => {
    userProfileRef.current = userProfile
  }, [userProfile])

  useEffect(() => {
    const handleBeforeUnload = () => {
      const conv = currentConversationRef.current
      const prof = userProfileRef.current
      
      if (conv && conv.messages.length > 0 && prof) {
        updateCurrentConversation(prof, conv)
        console.log('üíæ Saving on page unload:', conv.id, 'with', conv.messages.length, 'messages')
      }
    }
    
    window.addEventListener('beforeunload', handleBeforeUnload)
    
    return () => {
      window.removeEventListener('beforeunload', handleBeforeUnload)
    }
  }, [])

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–æ–ª–ª —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –ø—Ä—ã–∂–∫–∞–º–∏
  useEffect(() => {
    if (showHistory && !isInitialLoad && lastMessageRef.current && currentConversation?.messages.length) {
      const lastMessage = currentConversation.messages[currentConversation.messages.length - 1];
      
      if (lastMessage.role === 'user') {
        // –°–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Üí 'nearest' = –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –≤–∏–¥–Ω–æ)
        lastMessageRef.current.scrollIntoView({ behavior: 'smooth', block: 'nearest' })
      } else {
        // –û—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞ ‚Üí —Å–∫—Ä–æ–ª–ª –∫ –Ω–∞—á–∞–ª—É (—á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –Ω–∞—á–∞–ª–æ –æ—Ç–≤–µ—Ç–∞)
        lastMessageRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' })
      }
    }
  }, [currentConversation?.messages.length, isInitialLoad, showHistory, currentConversation?.messages])

  // Prefetch –∫—ç—à–∞ –º–µ–Ω—é –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤–≤–æ–¥–µ (–ø—Ä–æ–≥—Ä–µ–≤ –∫—ç—à–∞)
  const prefetchMenuCache = useCallback(async () => {
    if (cachePrefetched) return; // –£–∂–µ –ø—Ä–æ–≥—Ä–µ–ª–∏
    
    try {
      console.log('üî• Prefetching menu cache...');
      const response = await fetch('/api/agent/chat', { method: 'HEAD' });
      const cacheStatus = response.headers.get('X-Cache-Status');
      const itemsCount = response.headers.get('X-Items-Count');
      console.log('‚úÖ Menu cache prefetched:', cacheStatus, `(${itemsCount} items)`);
      setCachePrefetched(true);
    } catch (err) {
      console.error('‚ö†Ô∏è Failed to prefetch cache:', err);
      // –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ, –ø—Ä–æ—Å—Ç–æ –Ω–µ –±—É–¥–µ—Ç prefetch
    }
  }, [cachePrefetched])

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏ –¥–ª—è —Ç–µ–∫—Å—Ç–∞, –∏ –¥–ª—è –≥–æ–ª–æ—Å–∞)
  const sendMessage = useCallback(async (messageText: string) => {
    if (!messageText.trim() || !currentConversation || !userProfile) return
    
    setLoading(true)
    setError(null)
    setGreeting('') // —Å–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    setShowHistory(true) // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –¥–∏–∞–ª–æ–≥
    const userMessage = { role: 'user' as const, content: messageText }
    let updatedConversation = addMessageToConversation(currentConversation, userMessage)
    setCurrentConversation(updatedConversation)
    
    try {
      // –°—Ç—Ä–æ–∏–º user context
      const userContext = buildUserContext(userProfile)
      
      const response = await fetch('/api/agent/chat', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          message: messageText,
          conversationHistory: updatedConversation.messages.slice(-12).map(m => ({
            role: m.role,
            content: m.content,
          })),
          useStock,
          userContext,
          isReturningUser: userProfile.totalConversations > 0,
          language: userProfile.preferences.language || 'ru',
        }),
      })

      const data = await response.json()

      if (!response.ok) {
        throw new Error(data.error || 'Failed to get response')
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
      const assistantMessage = {
        role: 'assistant' as const,
        content: data.reply,
        suggestedProducts: data.suggestedProducts || [],
        productCards: data.productCards || [],
      }
      
      updatedConversation = addMessageToConversation(updatedConversation, assistantMessage)
      setCurrentConversation(updatedConversation)
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥ –≤ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–±–µ–∑ —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å—á—ë—Ç—á–∏–∫–æ–≤)
      const updatedProfile = updateCurrentConversation(userProfile, updatedConversation)
      setUserProfile(updatedProfile)
      
    } catch (err) {
      console.error('Chat error:', err)
      setError(err instanceof Error ? err.message : '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º fallback –æ—Ç–≤–µ—Ç
      const fallbackMessage = {
        role: 'assistant' as const,
        content: '–ò–∑–≤–∏–Ω–∏, —É –º–µ–Ω—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã üòî –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Å—å –∫ –∂–∏–≤–æ–º—É –±–∞–¥—Ç–µ–Ω–¥–µ—Ä—É –≤ –¥–∏—Å–ø–µ–Ω—Å–∞—Ä–∏.',
      }
      updatedConversation = addMessageToConversation(updatedConversation, fallbackMessage)
      setCurrentConversation(updatedConversation)
    } finally {
      setLoading(false)
    }
  }, [currentConversation, userProfile, useStock])

  const ask = async (e: React.FormEvent) => {
    e.preventDefault()
    
    if (!question.trim()) return
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∏ –æ—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    const messageText = question
    setQuestion('')
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await sendMessage(messageText)
  }

  const clearHistory = () => {
    if (!userProfile || !currentConversation) return
    
    // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è (–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º preferences)
    console.log('üóëÔ∏è Discarding current conversation:', currentConversation.id, 'with', currentConversation.messages.length, 'messages')
    const updatedProfile = discardCurrentConversation(userProfile, currentConversation)
    setUserProfile(updatedProfile)
    
    // –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π —á–∏—Å—Ç—ã–π –¥–∏–∞–ª–æ–≥
    const newConversation = startConversation()
    setCurrentConversation(newConversation)
    
    // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ UI
    setGreeting('') // –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ - –ø—É—Å—Ç—å –±—É–¥–µ—Ç —á–∏—Å—Ç—ã–π –ª–∏—Å—Ç
    setError(null) // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏
    setQuestion('') // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    setLoading(false) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    setShowHistory(false) // –°–∫—Ä—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
    
    console.log('üÜï New clean conversation started:', newConversation.id)
    console.log('üìö Remaining conversations in profile:', updatedProfile.conversations.length)
  }
  
  const resetProfile = () => {
    if (confirm(t('agentResetConfirm'))) {
      clearUserProfile()
      window.location.reload()
    }
  }

  // –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥ - –Ω–∞—á–∞–ª–æ –∑–∞–ø–∏—Å–∏
  const startRecording = async () => {
    if (!recorderRef.current || recordingState !== 'idle') return

    try {
      setError(null)
      await recorderRef.current.startRecording()
      setRecordingState('recording')
      setRecordingDuration(0)
      
      // –ü—Ä–æ–≥—Ä–µ–≤–∞–µ–º –∫—ç—à –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç
      if (!cachePrefetched) {
        prefetchMenuCache()
      }
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      durationTimerRef.current = setInterval(() => {
        setRecordingDuration(prev => prev + 1)
      }, 1000)
      
    } catch (err) {
      console.error('Recording error:', err)
      const errorMessage = err instanceof Error ? err.message : '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å –∑–∞–ø–∏—Å—å'
      
      setError(errorMessage)
      setRecordingState('idle')
      setRecordingDuration(0)
      
      // –û—á–∏—Å—Ç–∏—Ç—å —Ç–∞–π–º–µ—Ä –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∑–∞–ø—É—â–µ–Ω
      if (durationTimerRef.current) {
        clearInterval(durationTimerRef.current)
        durationTimerRef.current = null
      }
    }
  }

  // –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥ - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–ø–∏—Å–∏ –∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è
  const stopRecording = useCallback(async () => {
    if (!recorderRef.current || recordingState !== 'recording') return

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    if (durationTimerRef.current) {
      clearInterval(durationTimerRef.current)
      durationTimerRef.current = null
    }

    try {
      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø–∏—Å—å –∏ –ø–æ–ª—É—á–∞–µ–º –∞—É–¥–∏–æ blob
      const audioBlob = await recorderRef.current.stopRecording()
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ü–û–°–õ–ï –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø–∏—Å–∏
      setRecordingState('processing')
      setError(null) // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ª–æ–∫–∞–ª–∏ –∏–ª–∏ –ø—Ä–æ—Ñ–∏–ª—è
      const userLanguage = userProfile?.preferences.language || locale || 'en'
      console.log(`üé§ Transcribing with language: ${userLanguage}`)
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —è–∑—ã–∫–∞
      const transcribedText = await transcribeAudio(audioBlob, userLanguage)
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–ø–∏—Å–∏
      setRecordingState('idle')
      setRecordingDuration(0)
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      console.log('üé§ Auto-sending voice message:', transcribedText)
      await sendMessage(transcribedText)
      
    } catch (err) {
      console.error('Transcription error:', err)
      const errorMessage = err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏';
      setError(errorMessage)
      setRecordingState('idle')
      setRecordingDuration(0)
    }
  }, [recordingState, userProfile, locale, sendMessage])

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º callback –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ (–ø–æ—Å–ª–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è stopRecording)
  useEffect(() => {
    if (recorderRef.current) {
      recorderRef.current.setOnMaxDurationReached(() => {
        console.log('‚è±Ô∏è Max duration reached, stopping recording...')
        stopRecording()
      })
    }
  }, [stopRecording])

  // Toggle –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞ (–∫–ª–∏–∫ –¥–ª—è –Ω–∞—á–∞–ª–∞/–æ—Å—Ç–∞–Ω–æ–≤–∫–∏)
  const handleVoiceButtonClick = () => {
    if (recordingState === 'idle') {
      startRecording()
    } else if (recordingState === 'recording') {
      stopRecording()
    }
  }

  return (
    <section 
      ref={agentContainerRef}
      data-agent-active="true"
      className={`rounded-3xl bg-white/80 shadow-xl ring-1 ring-[#B0BF93]/50 overflow-hidden ${
        compact ? 'p-2.5 lg:p-3' : 'p-4 lg:p-6'
      }`}
    >
      <div className={`flex items-center justify-between gap-2 ${compact ? 'mb-2' : 'mb-3 lg:mb-4'}`}>
        <div className="flex items-center gap-2 lg:gap-3">
          <h2 className={`font-bold text-[#3D4D37] ${compact ? 'text-base lg:text-lg' : 'text-xl lg:text-2xl'}`}>{t('agentTitle')}</h2>
          {!compact && userProfile && userProfile.totalConversations > 0 && (
            <button
              onClick={() => setShowStats(!showStats)}
              className="rounded-full bg-[#536C4A]/10 px-3 py-1.5 text-sm font-semibold text-[#536C4A] hover:bg-[#536C4A]/20 transition-colors"
              title="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
            >
              üë§ –í–∏–∑–∏—Ç #{userProfile.totalConversations + 1}
            </button>
          )}
        </div>
        <div className="flex items-center gap-2">
          <label className={`inline-flex items-center gap-2 rounded-full bg-[#F4F8F0] text-[#2F3A24] ring-1 ring-[#B0BF93]/60 ${
            compact ? 'px-2 py-1' : 'px-3 py-1.5'
          }`}>
            <input
              type="checkbox"
              checked={useStock}
              onChange={(e) => setUseStock(e.target.checked)}
              className={compact ? 'h-3 w-3 accent-[#536C4A]' : 'h-4 w-4 accent-[#536C4A]'}
            />
            <span className={compact ? 'text-[10px]' : 'text-xs lg:text-sm'}>{t('agentSuggestFromStock')}</span>
          </label>
          {currentConversation && currentConversation.messages.length > 0 && (
            <button
              onClick={clearHistory}
              className={`rounded-full bg-[#536C4A]/10 flex items-center justify-center text-[#536C4A] hover:bg-[#536C4A]/20 transition-colors font-bold ${
                compact ? 'w-6 h-6 text-sm' : 'w-8 h-8 text-lg'
              }`}
              title="–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥"
            >
              +
            </button>
          )}
        </div>
      </div>

      {/* User Stats */}
      {showStats && userProfile && (
        <div className="mb-4 rounded-2xl bg-gradient-to-br from-[#F4F8F0] to-[#F7FBF3] p-4 ring-1 ring-[#B0BF93]/30">
          <div className="flex items-center justify-between mb-3">
            <h3 className="text-sm font-bold text-[#536C4A]">üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
            <button
              onClick={() => setShowStats(false)}
              className="text-xs text-[#536C4A]/60 hover:text-[#536C4A]"
            >
              ‚úï
            </button>
          </div>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-3 text-xs">
            <div className="bg-white/80 rounded-lg p-2">
              <div className="text-[#536C4A]/60">–í–∏–∑–∏—Ç–æ–≤</div>
              <div className="text-lg font-bold text-[#536C4A]">{userProfile.totalConversations}</div>
            </div>
            <div className="bg-white/80 rounded-lg p-2">
              <div className="text-[#536C4A]/60">–°–æ–æ–±—â–µ–Ω–∏–π</div>
              <div className="text-lg font-bold text-[#536C4A]">{userProfile.totalMessages}</div>
            </div>
            <div className="bg-white/80 rounded-lg p-2">
              <div className="text-[#536C4A]/60">–° –Ω–∞–º–∏</div>
              <div className="text-lg font-bold text-[#536C4A]">
                {Math.floor((Date.now() - userProfile.firstVisit.getTime()) / (1000 * 60 * 60 * 24))}–¥
              </div>
            </div>
            <div className="bg-white/80 rounded-lg p-2">
              <div className="text-[#536C4A]/60">–£—Ä–æ–≤–µ–Ω—å</div>
              <div className="text-lg font-bold text-[#536C4A]">
                {userProfile.preferences.experienceLevel === 'beginner' ? 'üå±' : 
                 userProfile.preferences.experienceLevel === 'expert' ? 'üå≥' : 'üåø'}
              </div>
            </div>
          </div>
          {userProfile.preferences.favoriteStrains && userProfile.preferences.favoriteStrains.length > 0 && (
            <div className="mt-3 pt-3 border-t border-[#B0BF93]/20">
              <div className="text-xs text-[#536C4A]/60 mb-1">–†–∞–Ω–µ–µ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–ª:</div>
              <div className="flex flex-wrap gap-1">
                {userProfile.preferences.favoriteStrains.slice(0, 5).map((strain, i) => (
                  <span key={i} className="text-xs bg-white/80 rounded-full px-2 py-0.5 text-[#536C4A]">
                    {strain}
                  </span>
                ))}
              </div>
            </div>
          )}
          <button
            onClick={resetProfile}
            className="mt-3 w-full text-xs text-red-500 hover:text-red-600 opacity-50 hover:opacity-100 transition-opacity"
          >
            üóëÔ∏è –°–±—Ä–æ—Å–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é
          </button>
        </div>
      )}

      {/* –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
      {!compact && greeting && (!currentConversation || currentConversation.messages.length === 0) && (
        <div className="mb-3 lg:mb-4 rounded-2xl bg-gradient-to-br from-[#536C4A]/10 to-[#B0BF93]/10 p-3 lg:p-4 border border-[#B0BF93]/30">
          <div className="flex items-start gap-3">
            <div className="w-8 h-8 lg:w-10 lg:h-10 flex-shrink-0">
              <svg width="100%" height="100%" viewBox="0 0 164 164" xmlns="http://www.w3.org/2000/svg">
                <ellipse cx="81.537" cy="81.536" rx="76.03" ry="76.03" fill="rgb(83,108,74)" stroke="black" strokeWidth="0.48"/>
                <path d="M140.821,49.101L95.18,49.101C94.364,49.101 93.6,49.166 92.887,49.284C92.114,49.411 91.395,49.601 90.726,49.834C90.096,50.055 89.509,50.338 88.967,50.681C88.429,51.022 87.94,51.422 87.502,51.879L87.487,51.893C87.026,52.336 86.625,52.824 86.286,53.356C85.946,53.89 85.665,54.474 85.443,55.108C85.218,55.749 85.044,56.443 84.922,57.185C84.798,57.934 84.727,58.731 84.707,59.571L84.709,72.745C84.727,73.606 84.798,74.413 84.921,75.169C85.044,75.92 85.218,76.616 85.443,77.258C85.663,77.888 85.95,78.468 86.295,79.005C86.64,79.542 87.044,80.036 87.496,80.491C88.412,81.414 89.515,82.133 90.812,82.616C92.074,83.085 93.527,83.334 95.18,83.334L140.821,83.334L140.821,63.039L127.019,63.039L120.722,69.336L134.348,69.336L134.348,77.037L95.944,77.037C95.571,77.037 95.212,77.01 94.87,76.955C94.523,76.9 94.203,76.818 93.91,76.71C93.612,76.6 93.337,76.466 93.086,76.31C92.829,76.15 92.599,75.968 92.396,75.765C91.986,75.355 91.679,74.851 91.476,74.253C91.28,73.677 91.182,73.017 91.182,72.275L91.182,60.218C91.182,59.458 91.284,58.788 91.481,58.204C91.685,57.601 91.991,57.094 92.389,56.678C92.797,56.253 93.301,55.929 93.908,55.713C94.493,55.505 95.17,55.397 95.944,55.397L134.525,55.397L140.821,49.101Z" fill="white"/>
                <path d="M33.428,55.397L71.15,55.397C71.892,55.397 72.552,55.495 73.128,55.691C73.723,55.893 74.227,56.2 74.638,56.611L74.64,56.613C75.05,57.023 75.356,57.533 75.559,58.141C75.755,58.727 75.853,59.4 75.853,60.16L75.853,72.275C75.853,73.017 75.755,73.677 75.56,74.253C75.358,74.848 75.05,75.353 74.639,75.764C74.439,75.966 74.212,76.147 73.958,76.308C73.711,76.464 73.442,76.597 73.149,76.708C72.858,76.817 72.542,76.9 72.204,76.955C71.868,77.009 71.516,77.037 71.15,77.037L33.428,77.037C33.062,77.037 32.71,77.009 32.374,76.955C32.036,76.9 31.72,76.817 31.43,76.708C31.137,76.597 30.867,76.464 30.62,76.308C30.366,76.147 30.139,75.966 29.939,75.764C29.528,75.353 29.221,74.848 29.019,74.253C28.823,73.677 28.725,73.017 28.725,72.275L28.725,60.16C28.725,59.4 28.823,58.727 29.019,58.141C29.222,57.533 29.528,57.023 29.938,56.613L29.94,56.611C30.351,56.2 30.855,55.893 31.451,55.691C32.027,55.495 32.686,55.397 33.428,55.397ZM32.722,83.334L71.856,83.334C73.505,83.334 74.954,83.084 76.213,82.616C77.511,82.133 78.616,81.413 79.54,80.489C80.453,79.576 81.148,78.488 81.613,77.216L81.613,77.214C82.085,75.924 82.327,74.438 82.327,72.745L82.327,59.571C82.327,57.898 82.087,56.425 81.616,55.145C81.15,53.877 80.456,52.794 79.542,51.887C79.087,51.434 78.596,51.031 78.061,50.686C77.526,50.341 76.948,50.055 76.319,49.834C75.652,49.601 74.93,49.412 74.156,49.284C73.439,49.166 72.673,49.101 71.856,49.101L32.722,49.101C31.906,49.101 31.139,49.166 30.422,49.284C29.648,49.412 28.927,49.601 28.259,49.834C27.63,50.055 27.052,50.341 26.518,50.686C25.982,51.031 25.491,51.434 25.036,51.887C24.123,52.794 23.429,53.877 22.963,55.145C22.492,56.425 22.252,57.898 22.252,59.571L22.252,72.745C22.252,74.438 22.493,75.924 22.965,77.214L22.965,77.216C23.431,78.488 24.126,79.576 25.038,80.489C25.962,81.413 27.068,82.133 28.365,82.616C29.624,83.084 31.073,83.334 32.722,83.334Z" fill="white"/>
                <path d="M38.881,60.098L38.881,69.575C38.881,70.176 38.998,70.605 39.232,70.862C39.49,71.096 39.919,71.213 40.519,71.213L45.059,71.213L45.059,74.138L40.309,74.138C39.505,74.138 38.827,74.052 38.269,73.885C37.711,73.717 37.259,73.46 36.916,73.109C36.565,72.765 36.307,72.309 36.139,71.744C35.972,71.178 35.886,70.503 35.886,69.715L35.886,60.098L38.881,60.098ZM51.002,69.043C50.511,69.043 50.144,69.137 49.902,69.324C49.653,69.511 49.528,69.788 49.528,70.155L49.528,71.213L53.869,71.213L53.869,69.043L51.002,69.043ZM53.869,67.118C53.869,66.939 53.837,66.767 53.775,66.607C53.713,66.447 53.619,66.323 53.494,66.229C53.245,66.042 52.878,65.948 52.394,65.948L46.521,65.948L49.446,63.023L53.225,63.023L53.225,63.035C54.372,63.097 55.245,63.374 55.846,63.866C56.524,64.427 56.864,65.266 56.864,66.381L56.864,74.138L53.869,74.138L53.869,72.079L51.81,74.138L46.521,74.138L46.521,70.453C46.521,68.23 47.875,67.118 50.581,67.118L53.869,67.118ZM64.211,71.213C64.695,71.213 65.066,71.12 65.323,70.932C65.557,70.753 65.681,70.476 65.697,70.102L65.697,67.06C65.681,66.685 65.557,66.408 65.323,66.229C65.066,66.042 64.691,65.948 64.207,65.948L62.8,65.948C62.308,65.948 61.938,66.042 61.696,66.229C61.446,66.408 61.322,66.685 61.322,67.06L61.329,73.272L63.389,71.213L64.211,71.213ZM58.327,58.928L61.322,58.928L61.322,65.082L63.389,63.023L64.621,63.023C67.335,63.023 68.692,64.135 68.692,66.358L68.692,70.78C68.692,71.896 68.353,72.734 67.671,73.296C66.992,73.857 65.974,74.138 64.625,74.138L58.327,74.138L58.327,58.928Z" fill="rgb(176,191,147)"/>
              </svg>
            </div>
            <div className="flex-1">
              <p className="text-sm lg:text-base text-[#2F3A24] font-medium">{greeting}</p>
              {userProfile && userProfile.preferences.preferredEffects && userProfile.preferences.preferredEffects.length > 0 && (
                <p className="text-xs lg:text-sm text-[#536C4A]/70 mt-1 lg:mt-2">
                  –ü–æ–º–Ω—é, —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è: {userProfile.preferences.preferredEffects.join(', ')}
                </p>
              )}
            </div>
          </div>
        </div>
      )}

      {(!currentConversation || currentConversation.messages.length === 0) && (
        <p className={`text-[#2F3A24]/70 ${compact ? 'mb-2 text-[10px]' : 'mb-3 lg:mb-4 text-xs lg:text-sm'}`}>
        {t('agentDescription')}
      </p>
      )}

      {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞ —Å–∫—Ä—ã—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–∏ */}
      {!showHistory && currentConversation && currentConversation.messages.length > 0 && (
        <div className={compact ? 'mb-2' : 'mb-3 lg:mb-4'}>
          <button
            onClick={() => setShowHistory(true)}
            className="w-full rounded-xl bg-[#536C4A]/10 px-4 py-2.5 text-sm font-medium text-[#536C4A] hover:bg-[#536C4A]/20 transition-colors flex items-center justify-center gap-2"
          >
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
              <path d="M3 12h18M3 6h18M3 18h18"/>
            </svg>
            {t('agentShowHistory')} ({currentConversation.messages.length} {
              currentConversation.messages.length === 1 ? t('agentMessage') :
              currentConversation.messages.length < 5 ? t('agentMessages2') :
              t('agentMessages5')
            })
          </button>
        </div>
      )}

      {/* –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π */}
      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –ø–æ –∫–ª–∏–∫—É */}
      {showHistory && currentConversation && currentConversation.messages.length > 0 && (
        <div 
          key={currentConversation.id}
          className={`overflow-y-auto pr-2 ${
            compact 
              ? 'mb-2 max-h-40 space-y-1.5' 
              : 'mb-3 lg:mb-4 max-h-60 lg:max-h-64 space-y-2 lg:space-y-3'
          }`}
        >
          {currentConversation.messages.map((msg, idx) => {
            const isLastMessage = idx === currentConversation.messages.length - 1;
            return (
            <div
              key={idx}
              ref={isLastMessage ? lastMessageRef : null}
              className={`rounded-2xl ${
                compact ? 'p-2' : 'p-3 lg:p-4'
              } ${
                msg.role === 'user'
                  ? 'bg-gradient-to-br from-[#536C4A]/10 to-[#B0BF93]/10 ml-4 lg:ml-8'
                  : 'bg-[#F4F8F0] ring-1 ring-[#B0BF93]/50 mr-4 lg:mr-8'
              }`}
            >
              <div className={`font-semibold uppercase tracking-wide text-[#536C4A] ${
                compact ? 'text-[10px] mb-0.5' : 'text-xs mb-1 lg:mb-1.5'
              }`}>
                {msg.role === 'user' ? '–í—ã' : 'OG Lab Agent'}
              </div>
              <div className={`text-[#2F3A24] whitespace-pre-wrap leading-relaxed ${
                compact ? 'text-xs' : 'text-sm'
              }`}>
                {renderMarkdown(msg.content)}
              </div>
              
              {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ */}
              {msg.productCards && msg.productCards.length > 0 && (
                <div className={compact ? 'mt-1.5 space-y-1' : 'mt-3 lg:mt-4 space-y-2 lg:space-y-2.5'}>
                  {msg.productCards.map((product, i) => (
                    <div
                      key={i}
                      className={`rounded-xl bg-white ring-1 ring-[#B0BF93]/40 hover:ring-[#B0BF93] transition-all hover:shadow-md ${
                        compact ? 'p-2' : 'p-3 lg:p-4'
                      }`}
                    >
                      <div className={`flex items-start justify-between ${compact ? 'gap-2' : 'gap-3'}`}>
                        <div className="flex-1 min-w-0">
                          <div className={`flex items-center gap-2 ${compact ? 'mb-1' : 'mb-1.5'}`}>
                            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ç–∏–ø–∞ */}
                            {product.type && (
                              <span
                                className={`rounded-full flex-shrink-0 ${
                                  compact ? 'w-2 h-2' : 'w-3 h-3'
                                } ${
                                  product.type.toLowerCase() === 'indica'
                                    ? 'bg-indigo-500'
                                    : product.type.toLowerCase() === 'sativa'
                                    ? 'bg-orange-500'
                                    : 'bg-blue-500'
                                }`}
                              />
                            )}
                            <h4 className={`font-bold text-[#2F3A24] truncate ${
                              compact ? 'text-xs' : 'text-sm'
                            }`}>
                              {product.name}
                            </h4>
                            {product.isOur && (
                              <svg className={`text-[#536C4A] flex-shrink-0 ${
                                compact ? 'w-3 h-3' : 'w-4 h-4'
                              }`} viewBox="0 0 24 24" fill="currentColor">
                                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                              </svg>
                            )}
                          </div>
                          <div className={`text-[#536C4A]/70 ${
                            compact ? 'text-[10px] mb-1' : 'text-xs mb-2'
                          }`}>
                            {product.category}
                            {product.type && ` ‚Ä¢ ${product.type}`}
                          </div>
                          {/* –≠—Ñ—Ñ–µ–∫—Ç—ã –∏ –≤–∫—É—Å—ã */}
                          {(product.effects || product.flavors) && (
                            <div className={`text-[#2F3A24]/60 space-y-0.5 ${
                              compact ? 'text-[10px]' : 'text-xs'
                            }`}>
                              {product.effects && (
                                <div>üí´ {product.effects}</div>
                              )}
                              {product.flavors && (
                                <div>üåø {product.flavors}</div>
                              )}
                            </div>
                          )}
                        </div>
                        {/* THC/CBG */}
                        {(product.thc || product.cbg) && (
                          <div className="text-right flex-shrink-0">
                            <div className={`font-semibold text-[#536C4A] ${
                              compact ? 'text-xs' : 'text-sm'
                            }`}>
                              {product.thc ? `${product.thc}%` : product.cbg ? `${product.cbg}%` : ''}
                            </div>
                            <div className={compact ? 'text-[10px] text-gray-500' : 'text-xs text-gray-500'}>
                              {product.thc ? 'THC' : 'CBG'}
                            </div>
                          </div>
                        )}
                      </div>
                      {/* –¶–µ–Ω—ã */}
                      {(product.price_1g || product.price_5g || product.price_20g) && (
                        <div className={`flex border-t border-[#B0BF93]/20 ${
                          compact ? 'gap-1.5 mt-1.5 pt-1.5' : 'gap-2 lg:gap-3 mt-2 lg:mt-3 pt-2 lg:pt-3'
                        }`}>
                          {product.price_1g && (
                            <div className="flex-1 text-center">
                              <div className={compact ? 'text-[10px] text-gray-500' : 'text-xs text-gray-500'}>1G</div>
                              <div className={`font-bold text-[#536C4A] ${compact ? 'text-xs' : 'text-sm'}`}>{product.price_1g}‡∏ø</div>
                            </div>
                          )}
                          {product.price_5g && (
                            <div className="flex-1 text-center">
                              <div className={compact ? 'text-[10px] text-gray-500' : 'text-xs text-gray-500'}>5G+</div>
                              <div className={`font-bold text-[#536C4A] ${compact ? 'text-xs' : 'text-sm'}`}>{product.price_5g}‡∏ø</div>
                            </div>
                          )}
                          {product.price_20g && (
                            <div className="flex-1 text-center">
                              <div className={compact ? 'text-[10px] text-gray-500' : 'text-xs text-gray-500'}>20G+</div>
                              <div className={`font-bold text-[#536C4A] ${compact ? 'text-xs' : 'text-sm'}`}>{product.price_20g}‡∏ø</div>
                            </div>
                          )}
                        </div>
                      )}
                    </div>
                  ))}
                </div>
              )}
            </div>
            );
          })}
          
          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
          {loading && (
            <div className={`rounded-2xl bg-[#F4F8F0] ring-1 ring-[#B0BF93]/50 mr-4 lg:mr-8 ${
              compact ? 'p-2' : 'p-3 lg:p-4'
            }`}>
              <div className={`flex items-center text-[#536C4A] ${compact ? 'gap-2' : 'gap-3'}`}>
                <div className={`border-2 border-[#536C4A] border-t-transparent rounded-full animate-spin ${
                  compact ? 'w-4 h-4' : 'w-5 h-5 lg:w-6 lg:h-6'
                }`}></div>
                <span className={compact ? 'text-xs' : 'text-sm'}>–î—É–º–∞—é...</span>
              </div>
            </div>
          )}
        </div>
      )}

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–ø–∏—Å–∏ */}
      {recordingState === 'recording' && (
        <div className={`rounded-xl bg-red-50 border border-red-200 ${
          compact ? 'p-2 mb-2' : 'p-3 mb-3'
        }`}>
          <div className={`flex items-center justify-between ${
            compact ? 'text-xs' : 'text-sm'
          }`}>
            <div className="flex items-center gap-2 text-red-600 font-semibold">
              <span className="inline-block w-2 h-2 bg-red-500 rounded-full animate-pulse"></span>
              {t('agentRecording')}
            </div>
            <div className={`font-mono font-semibold ${
              recordingDuration >= (MAX_RECORDING_DURATION_SEC - 5) ? 'text-red-600' : 'text-red-500'
            }`}>
              {recordingDuration}—Å / {MAX_RECORDING_DURATION_SEC}—Å
            </div>
          </div>
        </div>
      )}

      {/* –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ */}
      <form onSubmit={ask} className="w-full">
        <div className={`flex items-center rounded-2xl bg-white/80 shadow-sm focus-within:border-[#536C4A] w-full overflow-hidden ${
          compact ? 'gap-1.5 border border-[#B0BF93]/60 px-2 py-1' : 'gap-2 border-2 border-[#B0BF93]/60 px-3 py-2'
        }`}>
          <input
            value={question}
            onChange={(e) => {
              setQuestion(e.target.value)
              // –ü—Ä–æ–≥—Ä–µ–≤–∞–µ–º –∫—ç—à –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤–≤–æ–¥–µ —Å–∏–º–≤–æ–ª–∞
              if (!cachePrefetched && e.target.value.length === 1) {
                prefetchMenuCache()
              }
            }}
            placeholder={t('agentPlaceholder')}
            disabled={loading}
            data-agent-input="true"
            className={`min-w-0 flex-1 bg-transparent text-[#2F3A24] outline-none placeholder:text-[#2F3A24]/40 disabled:opacity-50 ${
              compact ? 'px-1 py-1 text-base' : 'px-2 py-2 text-base lg:text-base'
            }`}
          />
          {isRecordingSupported && (
          <button
            type="button"
              aria-label={
                recordingState === 'recording' ? t('agentRecordingStopShort')
                : recordingState === 'processing' ? t('agentProcessing')
                : t('agentVoiceInput')
              }
              disabled={loading || recordingState === 'processing'}
              onClick={handleVoiceButtonClick}
              className={`grid shrink-0 place-items-center rounded-full shadow-sm transition-all disabled:opacity-50 ${
                compact ? 'h-7 w-7' : 'h-10 w-10'
              } ${
                recordingState === 'recording'
                  ? 'bg-red-500 text-white ring-2 ring-red-300 animate-pulse scale-110'
                  : recordingState === 'processing'
                  ? 'bg-yellow-500 text-white ring-2 ring-yellow-300'
                  : 'bg-white text-[#2F3A24] ring-1 ring-[#B0BF93]/60 hover:bg-[#F4F8F0]'
              }`}
              title={
                recordingState === 'idle' ? t('agentRecordingStart')
                : recordingState === 'recording' ? t('agentRecordingStop')
                : ''
              }
            >
            {recordingState === 'processing' ? (
              <svg className="animate-spin" width={compact ? '14' : '20'} height={compact ? '14' : '20'} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                <path d="M21 12a9 9 0 1 1-6.219-8.56" />
              </svg>
            ) : (
          <svg width={compact ? '14' : '20'} height={compact ? '14' : '20'} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
            <path d="M12 1a3 3 0 0 0-3 3v6a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z" />
            <path d="M19 10a7 7 0 0 1-14 0" />
            <path d="M12 19v4" />
          </svg>
            )}
          </button>
          )}
          <button
            type="submit"
            aria-label={t('agentSend')}
            disabled={loading || !question.trim()}
            className={`grid shrink-0 place-items-center rounded-full bg-gradient-to-r from-[#536C4A] to-[#B0BF93] text-white shadow-lg transition-transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed ${
              compact ? 'h-7 w-7' : 'h-10 w-10'
            }`}
          >
            <svg width={compact ? '14' : '20'} height={compact ? '14' : '20'} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
              <path d="M12 19V5" />
              <path d="m5 12 7-7 7 7" />
            </svg>
          </button>
        </div>
      </form>

      {/* –û—à–∏–±–∫–∞ */}
      {error && (
        <div className={`rounded-xl bg-red-50 text-red-600 ${
          compact ? 'mt-2 p-2 text-xs' : 'mt-3 p-4 text-sm lg:text-base'
        }`}>
          ‚ùå {error}
        </div>
      )}

      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
      {!compact && currentConversation && currentConversation.messages.length === 0 && !greeting && isRecordingSupported && (
        <div className="mt-4">
          <div className="flex items-center gap-2 text-xs lg:text-sm text-[#536C4A]/70">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
              <path d="M12 1a3 3 0 0 0-3 3v6a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z" />
              <path d="M19 10a7 7 0 0 1-14 0" />
              <path d="M12 19v4" />
            </svg>
              <span>{t('agentRecordingHint', { max: MAX_RECORDING_DURATION_SEC })}</span>
          </div>
        </div>
      )}
    </section>
  )
}


