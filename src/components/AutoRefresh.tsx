'use client';

import { useEffect, useState } from 'react';

export default function AutoRefresh() {
  const [nextRefresh, setNextRefresh] = useState<Date | null>(null);

  useEffect(() => {
    // –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (15 –º–∏–Ω—É—Ç –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏)
    const calculateNextRefresh = () => {
      const now = new Date();
      const next = new Date(now.getTime() + 15 * 60 * 1000); // +15 –º–∏–Ω—É—Ç
      setNextRefresh(next);
      return next;
    };

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const firstRefresh = calculateNextRefresh();
    
    console.log(`üîÑ Auto-refresh scheduled for: ${firstRefresh.toLocaleTimeString()}`);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç (900 —Å–µ–∫—É–Ω–¥)
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å ISR revalidate –≤—Ä–µ–º–µ–Ω–∏
    const refreshInterval = setInterval(() => {
      console.log('üîÑ Auto-refreshing page to sync with new data and reset Pacman...');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
      if ('Notification' in window && Notification.permission === 'granted') {
        new Notification('OG Lab Menu', {
          body: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é –∏ —Å–±—Ä–æ—Å –∞–Ω–∏–º–∞—Ü–∏–∏...',
          icon: '/assets/images/oglab_logo_round.svg'
        });
      }
      
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
      setTimeout(() => {
        window.location.reload();
      }, 1000);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      calculateNextRefresh();
    }, 15 * 60 * 1000); // 15 –º–∏–Ω—É—Ç –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

    // –°–ª—É—à–∞–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (Supabase realtime) –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
    try {
      // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç —á—Ç–æ–±—ã –Ω–µ —Ç—è–Ω—É—Ç—å –∫–ª–∏–µ–Ω—Ç, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–µ–Ω
      import('@supabase/supabase-js').then(({ createClient }) => {
        const url = process.env.NEXT_PUBLIC_SUPABASE_URL as string
        const key = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY as string
        if (!url || !key) return
        const sb = createClient(url, key)
        // –°–ª—É—à–∞–µ–º –ª—é–±—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü–µ menu_items –∏ theme
        const sub = sb
          .channel('realtime-menu')
          .on('postgres_changes', { event: '*', schema: 'public', table: 'menu_items' }, () => {
            console.log('üü¢ Realtime: menu_items changed ‚Üí hard reload')
            window.location.reload()
          })
          .on('postgres_changes', { event: '*', schema: 'public', table: 'menu_layout' }, () => {
            console.log('üü¢ Realtime: menu_layout changed ‚Üí hard reload')
            window.location.reload()
          })
          .on('postgres_changes', { event: '*', schema: 'public', table: 'theme' }, () => {
            console.log('üü¢ Realtime: theme changed ‚Üí hard reload')
            window.location.reload()
          })
          // –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞–º–∏
          .on('broadcast', { event: 'soft-refresh' }, () => {
            console.log('üü° Admin broadcast: soft-refresh ‚Üí dispatch softRefresh event')
            try { window.dispatchEvent(new Event('softRefresh')) } catch {}
          })
          .on('broadcast', { event: 'hard-refresh' }, () => {
            console.log('üî¥ Admin broadcast: hard-refresh ‚Üí hard reload')
            window.location.reload()
          })
          .subscribe()

        // –û—á–∏—Å—Ç–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
        window.addEventListener('beforeunload', () => {
          try { sb.removeChannel(sub) } catch {}
        })
      })
    } catch {}

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    if ('Notification' in window && Notification.permission === 'default') {
      Notification.requestPermission();
    }

    // ------------------------------
    // Watchdog: –¥–µ—Ç–µ–∫—Ç –∑–∞–≤–∏—Å–∞–Ω–∏–π –∏ –∞–≤—Ç–æ-–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
    // ------------------------------
    let rafId = 0;
    let watchdogInterval: ReturnType<typeof setInterval> | undefined;
    let lastRafBeat = typeof performance !== 'undefined' ? performance.now() : Date.now();
    let consecutiveStalls = 0;

    const HEARTBEAT_TIMEOUT_MS = 15_000; // –µ—Å–ª–∏ rAF –Ω–µ —Ç–∏–∫–∞–µ—Ç > 15—Å ‚Äî —Å—á–∏—Ç–∞–µ–º —Ñ—Ä–∏–∑–æ–º
    const CHECK_EVERY_MS = 5_000; // –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑ –≤ 5—Å
    const MAX_CONSECUTIVE_STALLS = 2; // 2 –ø–æ–¥—Ä—è–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ ‚Üí –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞

    const rafBeat = () => {
      lastRafBeat = typeof performance !== 'undefined' ? performance.now() : Date.now();
      rafId = requestAnimationFrame(rafBeat);
    };
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—É–ª—å—Å rAF
    rafId = requestAnimationFrame(rafBeat);

    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–∞–≥–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞
    watchdogInterval = setInterval(() => {
      // –ï—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∫—Ä—ã—Ç–∞ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º (–±—Ä–∞—É–∑–µ—Ä –º–æ–∂–µ—Ç –ª–µ–≥–∏—Ç–∏–º–Ω–æ —Ç–æ—Ä–º–æ–∑–∏—Ç—å —Ç–∞–π–º–µ—Ä—ã)
      if (typeof document !== 'undefined' && document.visibilityState === 'hidden') {
        consecutiveStalls = 0;
        return;
      }

      const now = typeof performance !== 'undefined' ? performance.now() : Date.now();
      const lag = now - lastRafBeat;

      if (lag > HEARTBEAT_TIMEOUT_MS) {
        consecutiveStalls += 1;
        console.warn(`‚ö†Ô∏è Watchdog: main thread stall detected: ~${Math.round(lag)}ms (x${consecutiveStalls})`);
        if (consecutiveStalls >= MAX_CONSECUTIVE_STALLS) {
          console.warn('üîÅ Watchdog: forcing reload due to repeated stalls');
          try {
            // –ú—è–≥–∫–∞—è –ø–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–∞—è–∫ (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)
            navigator.sendBeacon?.('/api/revalidate');
          } catch {}
          window.location.reload();
        }
      } else {
        consecutiveStalls = 0;
      }
    }, CHECK_EVERY_MS);

    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ —Ñ–∞—Ç–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–∫–∞—Ö —Ä–∞–Ω—Ç–∞–π–º–∞
    const onFatal = (e: unknown) => {
      console.error('üí• Fatal error caught by watchdog:', e);
      setTimeout(() => window.location.reload(), 1000);
    };
    window.addEventListener('error', onFatal);
    window.addEventListener('unhandledrejection', onFatal as EventListener);

    // –ê–≤—Ç–æ–ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ/–≤–æ–∑–≤—Ä–∞—Ç–µ —Å–µ—Ç–∏
    const onOnline = () => {
      console.log('üåê Online ‚Äî refreshing to recover connections');
      window.location.reload();
    };
    window.addEventListener('online', onOnline);

    // –û—á–∏—Å—Ç–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤/–ª–∏—Å—Ç–µ–Ω–µ—Ä–æ–≤ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    return () => {
      clearInterval(refreshInterval);
      if (watchdogInterval) clearInterval(watchdogInterval);
      if (rafId) cancelAnimationFrame(rafId);
      window.removeEventListener('error', onFatal);
      window.removeEventListener('unhandledrejection', onFatal as EventListener);
      window.removeEventListener('online', onOnline);
    };
  }, []);

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ–≤–∏–¥–∏–º—ã–π, —Ç–æ–ª—å–∫–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ª–æ–≥–∏–∫—É
  // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å
  useEffect(() => {
    if (!nextRefresh) return;

    const logInterval = setInterval(() => {
      const now = new Date();
      const timeLeft = Math.max(0, nextRefresh.getTime() - now.getTime());
      const minutesLeft = Math.floor(timeLeft / (1000 * 60));
      const secondsLeft = Math.floor((timeLeft % (1000 * 60)) / 1000);
      
      if (timeLeft > 0) {
        console.log(`‚è∞ Next auto-refresh in: ${minutesLeft}m ${secondsLeft}s`);
      }
    }, 60000); // –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

    return () => clearInterval(logInterval);
  }, [nextRefresh]);

  return null;
}
