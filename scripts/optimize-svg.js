#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { optimize } = require('svgo');

const svgoConfig = {
  plugins: [
    {
      name: 'preset-default',
      params: {
        overrides: {
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º viewBox –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏
          removeViewBox: false,
        },
      },
    },
    // –£–¥–∞–ª—è–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
    'removeXMLNS',
    'removeDoctype',
    'removeXMLProcInst',
    // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –ø—É—Ç–∏ –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏
    'convertTransform',
    'mergePaths',
    // –ú–∏–Ω–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏
    'minifyStyles',
  ],
};

const imagesDir = path.join(__dirname, '../public/assets/images');
const svgFiles = fs.readdirSync(imagesDir).filter(file => 
  file.endsWith('.svg') && !file.includes('.optimized.')
);

console.log('üîß –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è SVG —Ñ–∞–π–ª–æ–≤ –¥–ª—è –¢–í...\n');

let totalSaved = 0;
let filesOptimized = 0;

svgFiles.forEach(file => {
  const filePath = path.join(imagesDir, file);
  const originalContent = fs.readFileSync(filePath, 'utf8');
  const originalSize = Buffer.byteLength(originalContent, 'utf8');
  
  try {
    const result = optimize(originalContent, svgoConfig);
    const optimizedSize = Buffer.byteLength(result.data, 'utf8');
    const saved = originalSize - optimizedSize;
    const savedPercent = ((saved / originalSize) * 100).toFixed(1);
    
    // –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è (>5%)
    if (saved > originalSize * 0.05) {
      fs.writeFileSync(filePath, result.data);
      console.log(`‚úÖ ${file}: ${(originalSize/1024).toFixed(1)}KB ‚Üí ${(optimizedSize/1024).toFixed(1)}KB (-${savedPercent}%)`);
      totalSaved += saved;
      filesOptimized++;
    } else {
      console.log(`‚ö™ ${file}: —É–∂–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω`);
    }
  } catch (error) {
    console.log(`‚ùå ${file}: –æ—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏`);
  }
});

console.log(`\nüéâ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ ${filesOptimized} —Ñ–∞–π–ª–æ–≤`);
console.log(`üíæ –°—ç–∫–æ–Ω–æ–º–ª–µ–Ω–æ: ${(totalSaved/1024).toFixed(1)}KB`);
console.log(`üöÄ –ë—ã—Å—Ç—Ä–µ–µ –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –¢–í –∏ –º–µ–¥–ª–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö!`);
